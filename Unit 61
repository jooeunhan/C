// 61.1 정수, 실수, 불 반환값 사용하기 //
// 정수 반환
#include <stdio.h>

int one()
{
    return 1;
}

int main()
{
    int num1;

    num1 = one();

    printf("%d\n", num1);    // 1

    return 0;
}

// 실수, 불 값 반환
#include <stdio.h>
#include <stdbool.h>

float realNumber()
{
    return 1.234567f;
}

bool truth()
{
    return true;
}

int main()
{
    float num1;
    bool b1;

    num1 = realNumber();
    b1 = truth();

    printf("%f\n", num1);    // 1.234567
    printf("%d\n", b1);      // 1

    return 0;
}

// 61.2 포인터 반환하기 //
#include <stdio.h>

int* ten()
{
    int num1 = 10;

    return &num1;
}

int main()
{
    int* numPtr;

    numPtr = ten();

    printf("%d\n", *numPtr);    // 10

    return 0;
}
// 컴파일 경고 발생 후 잘 작동하긴 하지만 올바르게 하기 위해서는 malloc으로 메모리 할당 후 해야 함

// 올바른 방법
#include <stdio.h>
#include <stdlib.h>

int* ten()
{
    int* numPtr = malloc(sizeof(int));

    *numPtr = 10;

    return numPtr;
}

int main()
{
    int* numPtr;

    numPtr = ten();

    printf("%d\n", *numPtr);    // 10

    free(numPtr);

    return 0;
}

// 문자열 반환 후 사용
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char* helloLiteral()
{
    char* s1 = "Hello, world!";

    return s1;
}

char* helloDynamicMemory()
{
    char* s1 = malloc(sizeof(char) * 20);

    strcpy(s1, "Hello, world!");

    return s1;
}

int main()
{
    char* s1;
    char* s2;

    s1 = helloLiteral();
    s2 = helloDynamicMemory();

    printf("%s\n", s1);    // Hello, world!
    printf("%s\n", s2);    // Hello, world!

    free(s2);

    return 0;
}

// 61.3 void 포인터 반환하기 //
