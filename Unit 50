// 50.1 두 점 사이의 거리 구하기 //
// 구조체로 변수 두 개 선언
#include <stdio.h>

struct Point2D {
    int x;
    int y;
};

int main()
{
    struct Point2D p1;
    struct Point2D p2;

    p1.x = 30;
    p1.y = 20;

    p2.x = 60;
    p2.y = 50;

    printf("p1: %d %d\n", p1.x, p1.y);
    printf("p2: %d %d\n", p2.x, p2.y);

    return 0;
}

// p1과 p2의 거리 구하기 1번 방법
#include <stdio.h>
#include <math.h>    // sqrt 함수가 선언된 헤더 파일

struct Point2D {
    int x;
    int y;
};

int main()
{
    struct Point2D p1;
    struct Point2D p2;

    p1.x = 30;
    p1.y = 20;

    p2.x = 60;
    p2.y = 50;

    int a = p2.x - p1.x;
    int b = p2.y - p1.y;

    double c = sqrt((a * a) + (b * b));

    printf("%f\n", c);    // 42.426407

    return 0;
}

// p1과 p2의 거리 구하기 2번 방법
#include <stdio.h>
#include <math.h>

struct Point2D {
    int x;
    int y;
};

int main()
{
    struct Point2D p1;
    struct Point2D p2;

    p1.x = 30;
    p1.y = 20;

    p2.x = 60;
    p2.y = 50;

    int a = p2.x - p1.x;
    int b = p2.y - p1.y;

    double c = sqrt(pow (a, 2) + pow (b, 2));    // pow 함수는 거듭제곱을 구하는 함수

    printf("%f\n", c);    // 42.426407

    return 0;
}

// 심사문제
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

struct Point2D {
    int x;
    int y;
};

int main()
{
    struct Point2D p1;
    struct Point2D p2;
    double distance;

    scanf("%d %d %d %d", &p1.x, &p1.y, &p2.x, &p2.y);

    int a = p2.x - p1.x;
    int b = p2.y - p1.y;
    distance = sqrt(pow(a, 2) + pow(b, 2));

    printf("%f\n", distance);

    return 0;
}
