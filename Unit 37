// 37.1 2차원 배열을 선언하고 요소에 접근하기 //
#include <stdio.h>

int main()
{
    int numArr[3][4] = {
        { 11, 22, 33, 44 },
        { 55, 66, 77, 88 },
        { 99, 110, 121, 132 }
    };

    printf("%d\n", numArr[0][0]);    // 11
    printf("%d\n", numArr[1][2]);    // 77
    printf("%d\n", numArr[2][0]);    // 99
    printf("%d\n", numArr[2][3]);    // 132

    return 0;
}

// 37.2 2차원 배열을 초기화하기 //
#include <stdio.h>

int main()
{
    int numArr[3][4] = { 0, };

        printf("%d\n", numArr[0][0]);    // 0
        printf("%d\n", numArr[1][2]);    // 0
        printf("%d\n", numArr[2][0]);    // 0
        printf("%d\n", numArr[2][3]);    // 0

    return 0;
}

// 37.3 2차원 배열의 요소에 값 할당하기 //
#include <stdio.h>

int main()
{
    int numArr[3][4];

    numArr[0][0] = 11;
    numArr[0][1] = 22;
    numArr[0][2] = 33;
    numArr[0][3] = 44;

    numArr[1][0] = 55;
    numArr[1][1] = 66;
    numArr[1][2] = 77;
    numArr[1][3] = 88;

    numArr[2][0] = 99;
    numArr[2][1] = 110;
    numArr[2][2] = 121;
    numArr[2][3] = 132; 

    printf("%d\n", numArr[0][0]);    // 11 : 세로 인덱스 0, 가로 인덱스 0인 요소 출력
    printf("%d\n", numArr[1][2]);    // 77 : 세로 인덱스 1, 가로 인덱스 2인 요소 출력
    printf("%d\n", numArr[2][0]);    // 99 : 세로 인덱스 2, 가로 인덱스 0인 요소 출력
    printf("%d\n", numArr[2][3]);    // 132: 세로 인덱스 2, 가로 인덱스 3인 요소 출력

    return 0;
}

// 37.4 2차원 배열의 크기 구하기 //
#include <stdio.h>

int main()
{
    int numArr[3][4] = {
        { 11, 22, 33, 44 },
        { 55, 66, 77, 88 },
        { 99, 110, 121, 132 }
    };

    printf("%d\n", sizeof(numArr));    // 48

    int col = sizeof(numArr[0]) / sizeof(int);
    int row = sizeof(numArr) / sizeof(numArr[0]);

    printf("%d\n", col);    // 4
    printf("%d\n", row);    // 3

    return 0;
}

// 37.5 반복문으로 2차원 배열의 요소를 모두 출력하기 //
// 순서 출력
#include <stdio.h>

int main()
{
    int numArr[3][4] = {
        { 11, 22, 33, 44 },
        { 55, 66, 77, 88 },
        { 99, 110, 121, 132 }
    };

    int col = sizeof(numArr[0]) / sizeof(int);
    int row = sizeof(numArr) / sizeof(numArr[0]);

    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            printf("%d ", numArr[i][j]);
        }
        printf("\n");
    }

    return 0;
}

// 역순 출력
#include <stdio.h>

int main()
{
    int numArr[3][4] = {
        { 11, 22, 33, 44 },
        { 55, 66, 77, 88 },
        { 99, 110, 121, 132 }
    };

    int col = sizeof(numArr[0]) / sizeof(int);
    int row = sizeof(numArr) / sizeof(numArr[0]);

    for (int i = row - 1; i >= 0; i--)
    {
        for (int j = col - 1; j >= 0; j--)
        {
            printf("%d ", numArr[i][j]);
        }
        printf("\n");
    }

    return 0;
}

// 37.6 2차원 배열을 포인터에 넣기 //
#include <stdio.h>

int main()
{
    int numArr[3][4] = {
        { 11, 22, 33, 44 },
        { 55, 66, 77, 88 },
        { 99, 110, 121, 132 }
    };

    int (*numPtr)[4] = numArr;

    printf("%p\n", *numPtr);
    printf("%p\n", *numArr);
    printf("%d\n", numPtr[2][1]);      // 110
    printf("%d\n", sizeof(numArr));    // 48
    printf("%d\n", sizeof(numPtr));    // 8

    return 0;
}

// 심사문제
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{
    int matrix[5][5];

    scanf("%d %d %d %d %d",
        &matrix[0][0], &matrix[0][1], &matrix[0][2], &matrix[0][3], &matrix[0][4]);
    scanf("%d %d %d %d %d",
        &matrix[1][0], &matrix[1][1], &matrix[1][2], &matrix[1][3], &matrix[1][4]);
    scanf("%d %d %d %d %d",
        &matrix[2][0], &matrix[2][1], &matrix[2][2], &matrix[2][3], &matrix[2][4]);
    scanf("%d %d %d %d %d",
        &matrix[3][0], &matrix[3][1], &matrix[3][2], &matrix[3][3], &matrix[3][4]);
    scanf("%d %d %d %d %d",
        &matrix[4][0], &matrix[4][1], &matrix[4][2], &matrix[4][3], &matrix[4][4]);

    int col = sizeof(matrix[0]) / sizeof(int);
    int row = sizeof(matrix) / sizeof(matrix[0]);

    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            printf("%d ", matrix[j][i]);
        }
        printf("\n");
    }

    return 0;
}
