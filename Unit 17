// 17.1 조건문 사용하기 //
#include <stdio.h>

int main()
{
    int num1 = 10;

    if (num1 == 10)    // ==은 ~와 같을 때 라는 뜻 (C 언어에서는 =이 할당에 사용되기 때문에 반드시 ==로 쓰도록 주의!)
    {
        printf("10입니다.\n");
    }

    return 0;
}

// 17.2 if 조건문과 세미콜론
#include <stdio.h>

int main()
{
    int num1 = 5;

    if (num1 == 10);
    {
        printf("10입니다.\n");
    }
// 출력값: 10입니다. >> 실제로 num1은 5임에도 if 조건문 끝에 세미콜론이 붙어 있어 무조건 10이 나옴
// 세미콜론은 if와 printf를 전혀 관계없는 상태로 만
// 따라서 if 조건문 끝에는 세미콜론을 붙이지 않도록 주의

    return 0;
}

// 17.3 if 조건문에서 중괄호 생략하기 //
// 실행할 코드가 한 줄일 경우
#include <stdio.h>

int main()
{
    int num1 = 10;

    if (num1 == 10)
        printf("10입니다.\n");    // 실행할 코드가 한 줄이라면 중괄호 생략

    return 0;
}

// 실행할 코드가 두 줄 이상일 경우
#include <stdio.h>

int main()
{
    int num1 = 5;

    if (num1 == 10)
        printf("if 조건문\n");
        printf("10입니다.\n");
// 출력값: 10입니다. >> 중괄호가 묶여있지 않아 if 조건문 print는 num1 == 10 일때만 출력되므로
// 독자적?인 printf 인 10입니다만 출력
// 따라서 무조건 중괄호를 넣어야 함

    return 0;
}

// 17.4 if 조건문에서 실수와 문자 비교하기 //
#include <stdio.h>

int main()
{
    float num1 = 0.1f;
    char c1 = 'a';

    if (num1 == 0.1f)    // 실수 비교
        printf("0.1 입니다.\n");

    if (c1 == 'a')    // 문자 비교
        printf("a 입니다.\n");

    if (c1 == 97)    // 문자를 아스키 코드로 비교
        printf("a 입니다.\n");

    return 0;
}

// 17.5 사용자가 입력한 값에 if 조건문 사용하기 //
# define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{
    int num1;
  
    scanf("%d", &num1);

    if (num1 == 10)
    {
        printf("10입니다.\n");
    }

    if (num1 == 20) 
    {
        printf("20입니다.\n");
    }

    return 0;
}

// 심사문제
# define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{
    int age;
  
    scanf("%d", &age);

    if (age < 18)    // <= (이하) | >= (이상) | < (미만) | > (초과)
    {
        printf("청소년 관람불가\n");
    }

    return 0;
}
