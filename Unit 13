// 13.1 변수의 값을 1 증가, 감소시키기 //
// 증가 연산자
#include <stdio.h>

int main()
{
    int num1 = 1;

    num1++;    // 정수형 변수의 값을 1 증가시킴

    printf("%d\n", num1);    // 2

    return 0;
}

// 감소 연산자
#include <stdio.h>

int main()
{
    int num1 = 2;

    num1--;    // 정수형 변수의 값을 1 감소시킴

    printf("%d\n", num1);    // 1

    return 0;
}

// 13.2 실수 자료형에 증감 연산자 사용하기 //
#include <stdio.h>

int main()
{
    float num1 = 2.1f;
    float num2 = 2.1f;

    num1++;    // 실수형 변수의 값을 1 증가시킴
    num2--;    // 실수형 변수의 값을 1 감소시킴

    printf("%f %f\n", num1, num2);    // 3.100000 1.100000

    return 0;
}

// 13.3 문자 자료형에 증감 연산자 사용하기 //
#include <stdio.h>

int main()
{
    char c1 = 'b';
    char c2 = 'b';

    c1++;    // 문자 자료형 변수의 값을 1 증가시킴, 'c'로 바뀜
    c2--;    // 문자 자료형 변수의 값을 1 감소시킴, 'a'로 바뀜

    printf("%c %c\n", c1, c2);    // c a: b에서 1 증가시켰으므로 c, b에서 1 감소시켰으므로 a

    return 0;
}

// 13.4 증감 연산자의 위치에 따른 차이점 알아보기 //
// 증감 연산자를 변수 뒤에 사용했을 때 (후위 연산자)
#include <stdio.h>

int main()
{
    int num1 = 2;
    int num2 = 2;
    int num3;
    int num4;

    num3 = num1++;    // num1의 값을 num3에 할당한 뒤 num1의 값을 1 증가시킴
    num4 = num2--;    // num2의 값을 num4에 할당한 뒤 num2의 값을 1 감소시킴

    printf("%d %d\n", num3, num4);    // 2 2

    return 0;
}

// 증감 연산자를 변수 앞에 사용했을 때 (전위 연산자)
#include <stdio.h>

int main()
{
    int num1 = 2;
    int num2 = 2;
    int num3;
    int num4;

    num3 = ++num1;    // num1의 값을 1 증가시킨 뒤 num3에 할당
    num4 = --num2;    // num2의 값을 1 감소시킨 뒤 num4에 할당

    printf("%d %d\n", num3, num4);    // 3 1

    return 0;
}

// 함수 인수로 사용할 때 - 후위
#include <stdio.h>

int main()
{
    int num1 = 2;
    int num2 = 2;

    printf("%d %d\n", num1++, num2--);    // 2 2: num1, num2의 값을 먼저 출력한 뒤 증감 연산자 동작
    printf("%d %d\n", num1, num2);        // 3 1: 증감 연산자가 동작한 결과

    return 0;
}

// 함수 인수로 사용할 때 - 전위
#include <stdio.h>

int main()
{
    int num1 = 2;
    int num2 = 2;

    printf("%d %d\n", ++num1, --num2);    // 3 1: 증감 연산자가 먼저 동작한 뒤 num1, num2의 값을 출력
    printf("%d %d\n", num1, num2);        // 3 1: 앞과 같은 값이 출력됨

    return 0;
}

//13.7 심사문제
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
 
int main()
{
    int num1;
    float num2;
    char c1;
 
    scanf("%d %f %c", &num1, &num2, &c1);
 
    num1 = ++num1;
    num2 = ++num2;
    c1 = --c1;
 
    printf("%d %f %c\n", num1, num2, c1);
 
    return 0;
}
