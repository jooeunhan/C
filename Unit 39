// 39.1 문자와 문자열 포인터 알아보기 //
#include <stdio.h>

int main()
{
	char c1 = 'a';
	char *s1 = "Hello";    // 문자열은 char의 1byte를 넘어서기 때문에 포인터에 저장해서 출

	printf("%c\n", c1);
	printf("%s\n", s1);

	return 0;
}

// 39.2 문자열 포인터에서 인덱스로 문자에 접근하기 //
// 문자열에서 문자 출력
#include <stdio.h>

int main()
{
	char* s1 = "Hello";

	printf("%c\n", s1[1]);    // e
	printf("%c\n", s1[4]);    // 5
	printf("%c\n", s1[5]);    // NULL

	return 0;
}

// 문자 할당
#include <stdio.h>

int main()
{
	char* s1 = "Hello";

	s1[0] = 'A';

	printf("%c\n", s1[1]);  
	printf("%c\n", s1[4]); 
	printf("%c\n", s1[5]);    
	printf("%c\n", s1[0]);

  // 에러 발생
	return 0;
}

// 39.3 배열 형태로 문자열 선언하기 //
// 문자 배열에 문자열 저장하기
#include <stdio.h>

int main()
{
	char s1[10] = "Hello";

	printf("%s\n", s1);    // Hello

	return 0;
}

// 배열 크기를 지정하지 않고 저장
#include <stdio.h>

int main()
{
	char s1[] = "Hello";    // 이럴 경우 Hello의 최소 단위인 6이 자동으로 지정
                          // 5 + 1(NULL)

	printf("%s\n", s1);    // Hello

	return 0;
}

// 39.4 배열 형태의 문자열에서 인덱스로 문자에 접근하기 //
#include <stdio.h>

int main()
{
	char s1[10] = "Hello";

	s1[0] = 'A';

	printf("%s\n", s1);    // Aello

	return 0;
}

// 심사문제
#include <stdio.h>

int main()
{
	char s1[] = "Beethoven\n9th\nSymphony";

	printf("%s\n", s1);

	return 0;
}
