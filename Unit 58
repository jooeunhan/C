// 58.1 기본 자료형 변환하기 //
#include <stdio.h>

int main()
{
	int num1 = 32;
	int num2 = 7;
	float num3;

	num3 = num1 / num2;
	printf("%f\n", num3);    // 4.000000

	num3 = (float)num1 / num2;
	printf("%f\n", num3);    // 4.571429
	
	return 0;
}

// 58.2 포인터 변환하기 //
#include <stdio.h>
#include <stdlib.h>

int main()
{
	int* numPtr = malloc(sizeof(int));
	char* cPtr;
	
	*numPtr = 0x12345678;

	cPtr = (char*)numPtr;

	printf("0x%x\n", *cPtr);    // 0x78

	free(numPtr);
	
	return 0;
}

// 다른 자료형으로 변환하면서 역참조
#include <stdio.h>
#include <stdlib.h>

int main()
{
	int* numPtr = malloc(sizeof(int));
	char* cPtr;
	
	*numPtr = 0x12345678;

	printf("0x%x\n", *(char *)numPtr);    // 0x78

	free(numPtr);
	
	return 0;
}

// 58.3 void 포인터 변환하기 //
#include <stdio.h>

int main()
{
	int num1 = 10;
	float num2 = 3.5f;
	char c1 = 'a';
	void* ptr;

	ptr = &num1;
	printf("%d\n", *(int*)ptr);      // 10 

	ptr = &num2;
	printf("%f\n", *(float*)ptr);    // 3.500000

	ptr = &c1;
	printf("%c\n", *(char*)ptr);     // a
	
	return 0;
}

// 58.4 구조체 포인터 변환하기 //
#include <stdio.h>
#include <stdlib.h>

struct Data {
	char c1;
	int num1;
};

int main()
{
	struct Data* d1 = malloc(sizeof(struct Data));
	void* ptr;

	d1->c1 = 'a';
	d1->num1 = 10;

	ptr = d1;

	printf("%c\n", ((struct Data*)ptr)->c1);      // a
	printf("%d\n", ((struct Data*)ptr)->num1);    // 10

	free(d1);
	
	return 0;
}

// 심사문제: 소수점 이하 버리기
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main()
{
	float num1;
	int num2;
	
	scanf("%f", &num1);

	num2 = (int)num1;
	printf("%d\n", num2);
	
	return 0;
}

// 심사문제: 포인터 변환하기
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

int main()
{
	unsigned long long* numPtr1 = malloc(sizeof(unsigned long long));
	unsigned int* numPtr2;

	scanf("%llx", numPtr1);

	numPtr2 = (int *)numPtr1;
	printf("0x%x\n", *numPtr2);

	free(numPtr1);
	
	return 0;
}

// 심사문제: void 포인터 변환하기
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

int main()
{
	long double* numPtr1 = malloc(sizeof(long double));
	void* ptr;

	scanf("%Lf", numPtr1);

	ptr = numPtr1;

	printf("%Lf\n", *(long double*)ptr);

	free(numPtr1);
	
	return 0;
}

// 심사문제: 구조체 포인터 변환하기
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Stats {
    float health;
    float healthRegen;
    unsigned int mana;
    float manaRegen;
    float range;
    float attackDamage;
    float armor;
    float attackSpeed;
    float magicResist;
    unsigned int movementSpeed;
};

int main()
{
    void* ptr = malloc(sizeof(struct Stats));
    struct Stats st;

    scanf("%u %u", &st.mana, &st.movementSpeed);

    memcpy(ptr, &st, sizeof(struct Stats));
    st.mana = 0;
    st.movementSpeed = 0;

    printf("%u\n", ((struct Stats*)ptr)->mana);
    printf("%u\n", ((struct Stats*)ptr)->movementSpeed);

    free(ptr);

    return 0;
}
