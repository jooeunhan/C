// 45.1 문자를 기준으로 문자열 자르기 //
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>    // strtok 함수가 선언된 헤더 파일

int main()
{
    char s1[30] = "The Little Prince";

    char* ptr = strtok(s1, " ");

    while (ptr != NULL)
    {
        printf("%s\n", ptr);
        ptr = strtok(NULL, " ");
    }
    /* The
       Little
       Prince */

    return 0;
}

// 45.2 문자열 포인터 자르기 //
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int main()
{
    char *s1 = malloc(sizeof(char) * 30);

    strcpy(s1, "The Little Prince");

    char* ptr = strtok(s1, " ");

    while (ptr != NULL)
    {
        printf("%s\n", ptr);
        ptr = strtok(NULL, " ");
    }

    return 0;
}

// 45.3 날짜와 시간값 자르기 //
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

int main()
{
    char s1[30] = "2002-06-05T23:01:12";

    char* ptr = strtok(s1, "-T;");

    while (ptr != NULL)
    {
        printf("%s\n", ptr);
        ptr = strtok(NULL, "-T:");
    }
    /* 2002
       06
       05
       23
       01
       12 */

    return 0;
}

// 45.4 자른 문자열 보관하기 //
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

int main()
{
    char s1[30] = "The Little Prince";
    char* sArr[10] = { NULL, };    // NULL로 초기화
    int i = 0;

    char* ptr = strtok(s1, " ");

    while (ptr != NULL)
    {
        sArr[i] = ptr;
        i++;

        ptr = strtok(NULL, " ");
    }

    for (i = 0; i < 10; i++)
    {
        if (sArr[i] != NULL)
            printf("%s\n", sArr[i]);
    }

    return 0;
}

// 심사문제: 문자열 자르기
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

int main()
{
    char s1[60];
    scanf("%s", s1);

    char* ptr = strtok(s1, ".");

    while (ptr != NULL)
    {
        printf("%s\n", ptr);
        ptr = strtok(NULL, ".");
    }

    return 0;
}

// 심사문제: 특정 단어 개수 세기
