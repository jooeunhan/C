// 62.1 매개변수 사용하기 //
#include <stdio.h>

void helloNumber(int num1)
{
    printf("Hello, %d\n", num1);
}

int main()
{
    helloNumber(10);    // Hello, 10
    helloNumber(20);    // Hello, 20

    return 0;
}

// 62.2 덧셈 함수 만들기 //
#include <stdio.h>

int add(int a, int b)    // int a, int b는 Paramiter
{
    return a + b;
}

int main()
{
    int num1;

    num1 = add(10, 20);    // 10, 20은 Arguement

    printf("%d\n", num1);    // 30

    return 0;
}

// 62.3 디버거에서 매개변수와 반환값 확인하기 //
/* 중단점 삽입/삭제: F9
   디버깅 시작 및 계속: F5
   디버깅 중지: Shift + F5
   프로시저 단위 실행: F10
   한 단계씩 코드 실행: F11
   프로시저 나가기: Shift + F11 */

// 심사문제: 게임 캐릭터 능력치 설정 함수 만들기
#include <stdio.h>

void setAttackSpeed(float a)
{
    printf("Attack Speed: %f\n", a);
}

int main()
{
    setAttackSpeed(0.638f);
    setAttackSpeed(1.23f);

    return 0;
}

// 심사문제: 덧셈 함수 만들기
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

long long add(long long num1, long long num2)
{
    return num1 + num2;
}
 
int main()
{
    long long num1, num2;

    scanf("%lld %lld", &num1, &num2);

    printf("%lld\n", add(num1, num2));

    return 0;
}

// 심사문제: 3차원 정보 만들기
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

struct Point3D {
    float x;
    float y;
    float z;
};

struct Point3D* allocPoint3D(float a, float b, float c)
{
    struct Point3D* p1;
    p1 = malloc(sizeof(struct Point3D));
    p1->x = a;
    p1->y = b;
    p1->z = c;
    return p1;
}

int main()
{
    float x, y, z;
    struct Point3D* pos1;

    scanf("%f %f %f", &x, &y, &z);

    pos1 = allocPoint3D(x, y, z);

    printf("%f %f %f\n", pos1->x, pos1->y, pos1->z);

    free(pos1);

    return 0;
}
